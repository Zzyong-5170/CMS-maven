<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<welcome-file-list>
		<welcome-file>/login.jsp</welcome-file>
	</welcome-file-list>

	<!-- tld引入 -->
	<jsp-config>
		<taglib>
			<taglib-uri>http://www.zzy.tag/tags</taglib-uri>
			<taglib-location>/WEB-INF/tld/tag.tld</taglib-location>
		</taglib>
	</jsp-config>

	<!-- 业务层相关文件加载 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:application-web.xml,classpath*:spring-dao.xml,classpath*:spring-shiro.xml</param-value>
	</context-param>
	<!-- =====================================加载spring===================================== -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- =====================================springmvc 配置===================================== -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern> <!-- 此处会拦截所有的请求(包括静态文件) -->
	</servlet-mapping>

	<!-- =====================================druid连接池配置=================================== -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<!-- =========================================shiro======================================= -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<!-- ==================================spring 对字符集的支持 ================================= -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- =====================================sitemesh 配置===================================== -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<!-- <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class> -->
		<filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
		<!-- 过滤 ERROE FORWARD -->
		<dispatcher>ERROR</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<!-- 设置session过期时间，
		 shiro web端的默认session管理机制
		 ServletContainerSession会从这里获取session的过期时间参数
	-->
	<session-config>
		<!-- session过期默认时间30分钟 -->
		<session-timeout>30</session-timeout>
	</session-config>
</web-app>
